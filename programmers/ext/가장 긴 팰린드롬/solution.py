'''
문제 설명
앞뒤를 뒤집어도 똑같은 문자열을 팰린드롬(palindrome)이라고 합니다.
문자열 s가 주어질 때, s의 부분문자열(Substring)중 가장 긴 팰린드롬의 길이를 return 하는 solution 함수를 완성해 주세요.

예를들면, 문자열 s가 abcdcba이면 7을 return하고 abacde이면 3을 return합니다.

제한사항
문자열 s의 길이 : 2,500 이하의 자연수
문자열 s는 알파벳 소문자로만 구성

입출력 예
s	answer
abcdcba	7
abacde	3

입출력 예 설명
입출력 예 #1
4번째자리 'd'를 기준으로 문자열 s 전체가 팰린드롬이 되므로 7을 return합니다.

입출력 예 #2
2번째자리 'b'를 기준으로 aba가 팰린드롬이 되므로 3을 return합니다.

https://programmers.co.kr/learn/courses/30/lessons/12904
'''

def solution(s):
	length = [1]
	for index in range(len(s)):
		if (index-1 >= 0) and (index+1 < len(s)) and (s[index-1] == s[index+1]):
			# print(letter)
			count = 1
			i = 1
			# print('@', index)
			while (index-i >= 0) and (index+i < len(s)) and (s[index-i] == s[index+i]):
				count += 2
				i += 1
			length.append(count)

		if (index+1 < len(s)) and (s[index] == s[index+1]):
			count = 2
			i = 1
			# print('~', index)
			while (index-i >= 0) and (index+1+i < len(s)) and (s[index-i] == s[index+1+i]):
				count += 2
				i += 1
			length.append(count)
	return max(length)